{
  "name": "docco-husky",
  "description": "Generated static project documentation primarily for node.js projects. A fork of Docco",
  "keywords": [
    "documentation",
    "docs",
    "generator",
    "coffeescript"
  ],
  "author": {
    "name": "Mike Brevoort",
    "email": "mike@brevoort.com"
  },
  "version": "0.3.3",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/mit-license.php"
    }
  ],
  "contributors": [
    {
      "name": "Mike Brevoort",
      "email": "mike@brevoort.com"
    },
    {
      "name": "Jeremy Ashkenas"
    }
  ],
  "engines": {
    "node": ">=0.4.0"
  },
  "bugs": {
    "url": "https://github.com/mbrevoort/docco-husky/issues"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mbrevoort/docco-husky.git"
  },
  "dependencies": {
    "coffee-script": "latest",
    "dox": "0.1.2",
    "jade": "0.17.0",
    "gravatar": "1.0.3",
    "underscore": "1.2.x",
    "commander": ">=0.5.2",
    "walk": "2.0.2"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "./lib/docco",
  "bin": {
    "docco-husky": "./bin/generate"
  },
  "scripts": {
    "install": "scripts/install.sh"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "readme": "Overview\n--------\n\nA streamlined static site generator for project documentation based on [Docco](http://jashkenas.github.com/docco/). \"Husky\" because it's bigger and more irregular than Docco, like [Husky](http://www.wisegeek.com/what-is-a-husky-size-in-clothing.htm) Jeans you would buy at Sears back in the day.\n\nA fork of [Docco](http://jashkenas.github.com/docco/), intended to go beyond the appropriate scope of Docco itself. Forked because Docco itself is pretty simple and this is intended to diverge. The initial fork included merged pull requests from [nevir](https://github.com/nevir) and [jswartwood](https://github.com/jswartwood) for their work on supporting recursive directories and an improved \"Jump To\" menu.\n\n\nExamples\n--------\n\nCheck out the [generated documentation](http://mbrevoort.github.com/docco-husky/docco-husky/readme.html) for this project.\n\nOr these other samples\n\n* [batman.js](http://mbrevoort.github.com/docco-husky/batman/readme.html) \n* [backbone.js](http://mbrevoort.github.com/docco-husky/backbone/readme.html) \n\nInstallation\n------------\n\n### Possible Gotchas\n\n* Docco requires [Pygments](http://pygments.org/) to be installed and will try to install it if it's not already. \n* Perl is required for [cloc](http://cloc.sourceforge.net/)\n\nTo install via npm into your project:\n\n\tnpm install docco-husky\n\nInstall globally:\n\n\t[sudo] npm install -g docco-husky\n\nOr include as a dependency in your package.json\n\n\nGenerating Documentation\n------------------------\n\ndocco-husky will generate docs in a ./docs directory. It accepts multiple files (including \nwildcards) and directories for it to recurse.\n\n\tdocco-husky -name \"<optional project name>\" <list of files>\n\nOptional configuration in your package.json. The project name can alternatively be passed in the package.json configuration and it will override the value passed in the <code>-name</code> option.\n\n\t\"docco_husky\": {\n\t\t\"css\": \"path/to/alternative/css/file.css\"\n    \t\"output_dir\": \"docs/out\",\t\t\t\t    // default \"docs\"\n    \t\"content_dir\": \"docs/my_markdown_files\",    // default null\n    \t\"project_name\": \"Your Project name\",\n\t\t\"show_timestamp\": true                      // default true\n  \t}\n\n### Examples\n\n\t# from a local install\n\t./node_modules/.bin/docco-husky app.js lib public\n\t\n\t# with a project name\n\t./node_modules/.bin/docco-husky -name \"My Project\" app.js lib public\n\t\n\t# with wildcards\n\t./node_modules/.bin/docco-husky -name \"My Project\" *.js lib public\n\t\n\t# with global install\n\tdocco-husky -name \"My Project\" *.js lib public\n\t\t\t\n\n### Other Markdown Content\n\n<code>docco-husky</code> can also include other markdown content from your project. It expects the markdown files to be in a specified directory configured with <code>content_dir</code>. It walks the directory recursively and puts the resulting files in your the <code>output_dir</code> root including a relative subdirectory.\n\nYou can manually link to these files from your README.md or optionally if there is a <code>content_index.md</code> file in your <code>content_dir</code> directory, this will be injected into the package.json section of the main page just below the module name and description in <code>index.html</code>. This is a convenient way to reference any additional documents in your <code>index.html</code> that you don't want in your README.md file. One reason you may not want links in your README.md file is that these relative links will not resolve when Github renders your project's README.md file.\n\nOutput\n------------------------\n\ndocco-husky will write generated files to ./docs by default or to the directory specified in the package.json config as <code>output_dir</code>\n\nFor all source files, the output will be like \n<base>.<ext> (e.g. foo.js) -->  <base>.html (e.g. foo.html).\n\nAn index.html will be generated and will include a formatted version of a \nREADME.md if your project includes it, some details from the a package.json file, \nand project stats generated by cloc.\n\nSingle line comments will only be parsed with the exception os Javascript (as of 0.2.0) which\nis in an early experimental state. ",
  "_id": "docco-husky@0.3.3",
  "_from": "docco-husky"
}
